<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
    <title type="text" xml:lang="en">Alyssa Vargas</title>
    <link type="application/atom+xml" rel="self" href="http://localhost:3000/atom.xml"/>
  
  <link href="http://localhost:3000/"/>
  <id>http://localhost:3000/</id>
  <updated>2018-05-04T11:02:02Z</updated>
  <author>
    <name>Alyssa Vargas</name>
    <email>allyrvargas@gmail.com</email>
  </author>
  <rights type="text">Copyright © 2018 Alyssa Vargas. All rights reserved.</rights>
  
  <entry>
  <title type="text">Blocitoff</title>
  <link rel="alternate" type="text/html" href="http://localhost:3000/post1.html" />
  <id>http://localhost:3000/post1</id>
  <published>2013-06-05T00:00:00Z</published>
  <updated>2013-06-05T00:00:00Z</updated>
  <content type="html"><![CDATA[ <h2>Coming June 2018!</h2>

<p>In the meantime, checkout some of my other projects on <a href="http://github.com/allyrv">Github <i class="fa fa-github"></i></a></p>
 ]]></content>
</entry>


  <entry>
  <title type="text">Blocipedia</title>
  <link rel="alternate" type="text/html" href="http://localhost:3000/post2.html" />
  <id>http://localhost:3000/post2</id>
  <published>2013-05-27T00:00:00Z</published>
  <updated>2013-05-27T00:00:00Z</updated>
  <content type="html"><![CDATA[ <h2>Summary</h2>
<p>Blocipedia is a Ruby-on-Rails application I built as a part of my training at Bloc with the help of my mentor, Shannon Bertucci. Blocipedia allows users to create public and private Markdown-based wikis. Users have the ability to create a free, standard account, which allows them to create public wikis. Alternatively, they can upgrade to a premium account to view and create private wikis and manage collaborators.</p>

<h2>Explanation</h2>
<p>Blocipedia was structured as a real sink-or-swim project. The assignments’ structure do not walk you through the steps, as Bloc has done in past projects. Instead the project’s instructions are brief, and I chose it because I really wanted to challenge myself.</p>

<h2>Project Requirements</h2>
<p>I was given a series of user stories for this project:</p>
<ul>
<li>As a user, I want to sign up for a free account by providing a user name, password and email</li>
<li>As a user, I want to sign in and out of Blocipedia</li>
<li>As a user with a standard account, I want to create, read, update and delete public wikis</li>
<li>As a developer, I want to offer three user roles: admin, standard, or premium</li>
<li>As a developer, I want to seed the development database automatically with users and wikis</li>
<li>As a user, I want to upgrade my account from a free to a paid plan</li>
<li>As a premium user, I want to create private wikis</li>
<li>As a user, I want to edit wikis using Markdown syntax</li>
<li>As a premium user, I want to add and remove collaborators for my private wikis</li>
</ul>

<h2>Problem</h2>
<p>The most difficult part of this project was thinking through the database. Setting up collaborators was challenging because prior to that user story, I had been using the <code class="highlighter-rouge">belongs to</code>, <code class="highlighter-rouge">has many</code> relationship for the database. However, a collaborator status modifies an existing user, and each wiki can have several collaborators. I also ran into some trouble with the database when deploying to Heroku.</p>

<h2>Solution</h2>
<p>I learned how to read error messages more carefully and better decipher the feedback. I felt like I got a lot better at being resourceful and looking for solutions on my own. So, following the <a href="http://guides.rubyonrails.org/association_basics.html#the-has-many-through-association" target="_blank">Rails guide on active record associations</a>, I set up <code class="highlighter-rouge">has many through</code> associations to get the relationships to work s intended.</p>

<h2>Results</h2>
<p>After a good struggle with deploying Blocipedia to Heroku, I successfully pushed this app to production. There’s a lot to be desired on the front-end, but it was an awesome learning experience for all-things-back-end. Check it out <a href="https://arcane-crag-67381.herokuapp.com" target="_blank">here</a>.</p>
 ]]></content>
</entry>


  <entry>
  <title type="text">Bloc Chat</title>
  <link rel="alternate" type="text/html" href="http://localhost:3000/post3.html" />
  <id>http://localhost:3000/post3</id>
  <published>2013-04-02T00:00:00Z</published>
  <updated>2013-04-02T00:00:00Z</updated>
  <content type="html"><![CDATA[ <h2>Summary</h2>
<p>Bloc Chat a real-time chat application built with Angular, and uses the Firebase Backend-as-a-Service. Working on this application gave me more front-end programming experience and served as a great introduction to the Angular framework.</p>

<h2>Explanation</h2>
<p>This application allows you to create a new chat room or join an existing room, and communicate with other users that are also logged into the chat room. Bloc essentially took off the training wheels within the checkpoints. It was mostly up to me and my ability to research to create this project.</p>

<h2>Project Requirements</h2>
<p>I was given a series of user stories for this project:</p>
<ul>
<li>As a user, I want to see a list of available chat rooms</li>
<li>As a user, I want to create chat rooms</li>
<li>As a user, I want to see a list of messages in each chat room</li>
<li>As a user, I want to set my username to display in chat rooms	</li>
<li>As a user, I want to send messages associated with my username in a chat room</li>
</ul>

<h2>Problem</h2>
<p>Unlike the prior front-end project, I was not given any real assets (background image, logo, etc.), nor detailed specifics in the UI. It was up to me to come up with the structure on my own.</p>

<h2>Solution</h2>
<p>Parts of the main design, especially the chat box and room list, were modeled with the Slack desktop application as an inspiration. I was left to my own devices for using HTML and CSS to create the application, so I had to be resourceful. It was tempting to push the elements of the page around until it worked, but I was more interested in being mindful of the box-model, and keeping the structre clean.</p>

<h2>Results</h2>
<p>This project was a great learning experience. Not just in the understanding of the languages and Firebase, but also in my troubleshooting techniques. I am proud of the end results, even though I didn’t have time to implement more features I had in mind. I’d to eventually revisit Bloc Chat and develop it further.</p>
 ]]></content>
</entry>



</feed>
